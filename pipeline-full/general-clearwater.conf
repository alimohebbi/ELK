input{

 snmp {
    mib_paths => ["/mib-dic/PROJECT-CLEARWATER-MIB.dic", "/mib-dic/UCD-SNMP-MIB.dic"]
    walk => [".1.3"]
    hosts => [
		{host => "udp:192.168.200.192/161" community => "clearwater"},
		{host => "udp:192.168.200.154/161" community => "clearwater"},
                {host => "udp:192.168.200.136/161" community => "clearwater"},
                {host => "udp:192.168.200.179/161" community => "clearwater"},
                {host => "udp:192.168.200.162/161" community => "clearwater"},
                {host => "udp:192.168.200.167/161" community => "clearwater"},
		{host => "udp:192.168.200.158/161" community => "clearwater"},
                {host => "udp:192.168.200.145/161" community => "clearwater"},
                {host => "udp:192.168.200.124/161" community => "clearwater"},
                {host => "udp:192.168.200.160/161" community => "clearwater"},
                {host => "udp:192.168.200.111/161" community => "clearwater"},
		{host => "udp:192.168.200.137/161" community => "clearwater"},
                {host => "udp:192.168.200.135/161" community => "clearwater"},
                {host => "udp:192.168.200.134/161" community => "clearwater"},
                {host => "udp:192.168.200.104/161" community => "clearwater"},
                {host => "udp:192.168.200.185/161" community => "clearwater"}
             ]
    interval => 60
    oid_path_length => 2
    type => "general" 
  }
}

filter{
 ruby{
  code =>
"event.to_hash.each { |k, v|
   if k.end_with? ('110.111.100.101')
     new_key = k[0,k.length - 18]
     event.set(new_key, v)
     event.remove(k)
   end
}
t=Time.now.strftime('%d-%m-%Y %H:%M:%S.%3N');
event.set('[@metadata][current_time]',t);
"
}


mutate {
           gsub => ["[@metadata][current_time]", "Z", ""]
           gsub => ["[@metadata][current_time]", "\d{1}\.\d{3}$", "0.000"]
    }

date {
        match => ["[@metadata][current_time]", "dd-MM-yyyy HH:mm:ss.SSS"]
    }

fingerprint {
    source => ["[@metadata][current_time]","host","type"]
    target => "[@metadata][generated_id]"
    method => "SHA1"
    concatenate_sources => true
    key => "star group"
    base64encode => true

  }
}
output {
 elasticsearch {
        hosts => [ "http://elasticsearch:9200" ]
        document_id => "%{[@metadata][generated_id]}"
	index => "general-clearwater"
    }
}
